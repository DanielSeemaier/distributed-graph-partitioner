#!/bin/bash

. "$script_pwd/../partitioners/inc/git.sh"
. "$script_pwd/../partitioners/inc/kagen-partitioner.sh"

# Separate fetch phase not supported
Fetch() {
    return
}

Install() {
    local -n install_args=$1
    
    if (( ${install_args[install_disk]} )); then 
        InstallDiskDriver install_args
    fi
    if (( ${install_args[install_kagen]} )); then 
        InstallKaGenDriver install_args
    fi
}

InstallDiskDriver() {
    local -n args=$1

    GenericGitFetch args "git@github.com:KaHIP/KaHIP.git" "install_dir_disk"

    current_pwd="$PWD"
    cd "$src_dir"
    CMAKE_GENERATOR="Unix Makefiles" ./compile_withcmake.sh
    cd "$current_pwd"

    cp "$src_dir/deploy/parhip" "${args[binary_disk]}"
}

InstallKaGenDriver() {
    local -n args=$1
    GenericKaGenPartitionerFetch args
    GenericKaGenPartitionerInstall args -DBUILD_PARHIP=On "ParHIP"
}

InvokeFromDisk() {
    local -n args=$1
    
    graph="${args[graph]}"
    [[ -f "$graph.bgf" ]] && graph="$graph.bgf"
    [[ -f "$graph.graph" ]] && graph="$graph.graph"
    [[ -f "$graph.metis" ]] && graph="$graph.metis"
    imbalance=$(echo "100*$epsilon/1" | bc)

    if [[ -f "$graph" ]]; then
        echo "${args[binary]} --k ${args[k]} --imbalance=$imbalance --seed=${args[seed]} $graph ${args[algorithm_arguments]}"
    else 
        >&2 echo "Warning: Graph $graph does not exist"
        return 1
    fi
}

InvokeFromKaGen() {
    local -n args
    GenericKaGenPartitionerInvokeFromKaGen args
}

