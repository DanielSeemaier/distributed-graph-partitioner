#!/usr/bin/env Rscript
options(show.error.locations = TRUE)
options(error = traceback)

initial.options <- commandArgs(trailingOnly = FALSE)
file.arg.name <- "--file="
script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
script.basename <- dirname(script.name)
source(file.path(script.basename, "../plots/performance_profile_plot.R"), chdir = TRUE)

algorithms <- commandArgs(trailingOnly = TRUE)

data <- list()
for (algorithm in algorithms) {
    df <- load_data(algorithm, paste0(getwd(), "/results/", algorithm, ".csv"))
    if (length(unique(df$NumThreadsPerMPI)) > 1) {
        df <- df %>% dplyr::mutate(Algorithm = paste0(Algorithm, "-", NumthreadsPerMPI))
    }
    data <- append(data, list(df))
}

num_algorithms = length(algorithms)

pdf("plots.pdf")
all_pp <- create_performance_profile(data[[1]], data[[2]]) +
    theme_bw() +
    create_theme()

print(all_pp)

#for (i in 1:(num_algorithms - 1)) {
#    for (j in (i+1):num_algorithms) {
#        a <- data[[i]]
#        b <- data[[j]]
#
#        print(performace_plot(list(a, b),
#            objective = "avg_km1",
#            hide_y_axis_title = FALSE,
#            show_infeasible_tick = FALSE,
#            show_timeout_tick = TRUE,
#            widths = c(3, 2, 1, 1),
#            latex_export = FALSE,
#            small_size = FALSE))
#    }
#}

#print(running_time_box_plot(data,
#    show_infeasible_tick = TRUE,
#    show_timeout_tick = TRUE,
#    order = algorithms,
#    latex_export = FALSE,
#    small_size = FALSE))
dev.off()

