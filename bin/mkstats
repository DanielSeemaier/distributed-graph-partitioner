#!/usr/bin/env Rscript
options(error=traceback)

library(this.path)

root = paste0(dirname(this.path()), "/..")
source(paste0(root, "/plots/functions.R"), chdir = TRUE)

algorithms = commandArgs(trailingOnly = TRUE)
num_algorithms = length(algorithms)

filter = c("amazon", "eu-2005", "youtube")
`%notin%` <- Negate(`%in%`)

data <- list()
for (algorithm in algorithms) {
    df <- read.csv(paste0("results/", algorithm, ".csv"))
    df <- subset(df, Graph %notin% filter)
    df$algorithm <- algorithm
    df$graph <- sub(".graph", "", df$Graph)
    df$imbalance <- df$Balance
    df$objective <- "km1"
    df$km1 <- df$Cut
    df$cut <- df$Cut 
    df$totalPartitionTime <- df$Time
    df$num_threads <- df$NumPEs
    df$seed <- 0
    df$k <- df$K
    df <- df %>% mutate(failed = ifelse(Failed == 1, "yes", "no"))

    df <- aggreg_data(df, timelimit = 3600, seeds = 9999, epsilon = 0.04)
    df$algorithm <- algorithm

    data <- append(data, list(df))
}

gmean <- function(x) {
    return(exp(mean(log(x))))
}

for (i in 1:(num_algorithms - 1)) {
    for (j in (i+1):num_algorithms) {
        a <- data[[i]]
        b <- data[[j]]

        a_ok <- subset(a, failed == FALSE)
        b_ok <- subset(b, failed == FALSE)
        
        a_graphs <- unique(a_ok$graph)
        b_graphs <- unique(b_ok$graph)

        a_common <- subset(a_ok, graph %in% b_graphs)
        b_common <- subset(b_ok, graph %in% a_graphs)

        a_gmean <- gmean(a_common$avg_cut)
        b_gmean <- gmean(b_common$avg_cut)

        cat(paste0(algorithms[[i]], " vs. ", algorithms[[j]], "\n"))
        cat(paste0("  # instances: ", nrow(a_common), " vs. ", nrow(b_common), "\n"))
        cat(paste0("  gmean cut: ", a_gmean, " (1.00) vs. ", b_gmean, " (", b_gmean / a_gmean, ")\n"))
        cat(paste0("  time: ", gmean(a_common$avg_time), " vs. ",  gmean(b_common$avg_time), "\n"))
    }
}

